#Commands
INSTALL ?= /usr/bin/install
INSTALL_PROGRAM = $(INSTALL)
INSTALL_DATA = $(INSTALL) -m 644
INSTALL_DIRS = ./tools/mkinstalldirs
RM = /usr/bin/rm -rf
LN = /usr/bin/ln -sf

#Files
exec := upnpc-redirect
serviceunit := $(pkgname).service
units = $(serviceunit) $(pkgname).timer 
drop-ins := ports.conf schedule.conf
service ?= /usr/sbin/service
pkg := $(pkgname)-$(pkgversion)
docs := README.md
ifdef docdir
examples := $(docdir)/examples
install-doc := $(addprefix $(docdir)/,$(docs)) \
               $(addprefix $(examples)/,$(drop-ins))
endif
ifdef portsdir
install-drop-ins = $(portsdir)/ports.conf $(scheduledir)/schedule.conf
endif

.PHONY: all installdirs install uninstall uninstall-doc rpm \
       	clean distclean dist uninstall-drop-ins

all: $(exec) $(drop-ins) $(units)

$(serviceunit): $(srcdir)/$(serviceunit).in
	cp $^ $@
	echo ExecStart=-$(libexecdir)/$(exec) >> $@

$(rcname):
	$(LN) $(service) $@

installdirs:
	@$(INSTALL_DIRS) $(dir $(rcname)) $(portsdir) $(scheduledir) \
                        $(libexecdir) $(unitdir) $(docdir) $(examples)

$(install-doc): $(docs) $(drop-ins)
	$(INSTALL_DATA) $(docs) $(docdir)
	$(INSTALL_DATA) $(drop-ins) $(examples)

$(install-drop-ins): $(drop-ins)
	$(INSTALL_DATA) ports.conf $(portsdir)
	$(INSTALL_DATA) schedule.conf $(scheduledir)

install: all installdirs $(install-drop-ins) $(install-doc) $(rcname)
	$(INSTALL_PROGRAM) $(exec) $(libexecdir)
	$(INSTALL_DATA) $(units) $(unitdir)

uninstall-doc:
	$(RM) $(docdir)

uninstall-drop-ins:
	$(RM) $(portsdir) $(scheduledir) 
	
uninstall: uninstall-doc uninstall-drop-ins
	$(RM) $(addprefix $(unitdir)/,$(units)) \
              $(libexecdir)/$(exec) $(rcname)

clean:
	$(RM) $(serviceunit) $(pkg).tar.gz

dist: distclean
	@echo "Creating $(pkg).tar.gz..."
	$(INSTALL_DIRS) $(pkg) && cd $(pkg) && $(LN) ../* . && $(RM) $(pkg)
	tar -chzf $(pkg).tar.gz $(pkg) && $(RM) $(pkg)

Makefile: ${srcdir}/Makefile.in VERSION config.status
	$(RM) Makefile
	./config.status

# Not impliemented yet
rpm: $(pkgname).spec
	rpmbuild -ba --clean $<

distclean: clean
	$(RM) Makefile config.status

